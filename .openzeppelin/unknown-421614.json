{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xf4e81C4f544738BBA70053Ae9c9ECEEfAe48484c",
    "txHash": "0x23856bf76546a0756471945f530d248376b4a3180ac6ee051b4e8278bfe7dd5b"
  },
  "proxies": [
    {
      "address": "0xD80bF73Ce62Fd5f5c4800DC79f3AC6aB63F8D3a7",
      "txHash": "0xf1ec5d9d39767e477e05a77a1f6da80833ce3aa2887a487012d22c9521ee122d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6269d2df8800e86361d70a21bcf0d8631157d51da7838237a773bbafa5ba6d1f": {
      "address": "0x92A11F91FE02f5B2D07261Ef4cF1f09B81664d49",
      "txHash": "0x889e7f2455187cc4e8c7f2bc80a4ba8c7e76f4bd7439780cb766a54f6b575807",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "contract": "CertixToken",
            "label": "blacklist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/CertixToken.sol:28"
          },
          {
            "contract": "CertixToken",
            "label": "skipBurnFeesList",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/CertixToken.sol:29"
          },
          {
            "contract": "CertixToken",
            "label": "tiers",
            "type": "t_array(t_struct(Tier)6068_storage)dyn_storage",
            "src": "../project:/contracts/CertixToken.sol:31"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Tier)6068_storage)dyn_storage": {
            "label": "struct CertixToken.Tier[]"
          },
          "t_struct(Tier)6068_storage": {
            "label": "struct CertixToken.Tier",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "minCertixBalance",
                "type": "t_uint256"
              },
              {
                "label": "canMint",
                "type": "t_bool"
              },
              {
                "label": "canMelt",
                "type": "t_bool"
              },
              {
                "label": "canMerge",
                "type": "t_bool"
              },
              {
                "label": "hasAuctionAccess",
                "type": "t_bool"
              },
              {
                "label": "magicItemLootingChance",
                "type": "t_uint256"
              },
              {
                "label": "maxWeightForMergeInMilligrams",
                "type": "t_uint256"
              },
              {
                "label": "transactionBurnFee",
                "type": "t_uint256"
              },
              {
                "label": "mintingFeePercentage",
                "type": "t_uint256"
              },
              {
                "label": "meltingFeePercentage",
                "type": "t_uint256"
              },
              {
                "label": "auctionFeePercentage",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "../@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20Capped": [
            {
              "contract": "ERC20CappedUpgradeable",
              "label": "_cap",
              "type": "t_uint256",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
