{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x768CfF425E21C232Ff67124744Ba822245F8C622",
    "txHash": "0x5fa5da97925858cad869f5ff209f4d14c035ee87815f48557a370b6ca2639981"
  },
  "proxies": [
    {
      "address": "0xBF8567237Cee2ced478E3039ddB907c4E1175e9d",
      "txHash": "0x97e5a81b0b643d6238ee788d16e80162c2c460eca0131735fbaa64e215d4f23e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5bef1ab1e09bb51564d059e66128c8272cb8df857b2e2e2f91bd74705bb57bca": {
      "address": "0x8e75160561EC7Bf971aE84F29134c9d01c938193",
      "txHash": "0xdd8d27ddf8ce33ae8cb5c9ac2a3130c78b66e9c0e692e4fd12e53426742bbf15",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "contract": "CertixNFT",
            "label": "tokenIdCounter",
            "type": "t_uint256",
            "src": "../project:/contracts/CertixNFT.sol:22"
          },
          {
            "contract": "CertixNFT",
            "label": "tokenIdToItemType",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/CertixNFT.sol:24"
          },
          {
            "contract": "CertixNFT",
            "label": "itemTypes",
            "type": "t_mapping(t_string_memory_ptr,t_struct(ItemType)4137_storage)",
            "src": "../project:/contracts/CertixNFT.sol:26"
          },
          {
            "contract": "CertixNFT",
            "label": "tokensByType",
            "type": "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)",
            "src": "../project:/contracts/CertixNFT.sol:28"
          },
          {
            "contract": "CertixNFT",
            "label": "itemTypesList",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "../project:/contracts/CertixNFT.sol:29"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_struct(ItemType)4137_storage)": {
            "label": "mapping(string => struct CertixNFT.ItemType)"
          },
          "t_struct(ItemType)4137_storage": {
            "label": "struct CertixNFT.ItemType",
            "members": [
              {
                "label": "supplyLimit",
                "type": "t_uint256"
              },
              {
                "label": "currentSupply",
                "type": "t_uint256"
              },
              {
                "label": "burnCount",
                "type": "t_uint256"
              },
              {
                "label": "goldWeightInGrams",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_string_memory_ptr,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(string => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint64": {
            "label": "uint64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721URIStorage": [
            {
              "contract": "ERC721URIStorageUpgradeable",
              "label": "_tokenURIs",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721Enumerable": [
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokens",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_ownedTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokens",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24"
            },
            {
              "contract": "ERC721EnumerableUpgradeable",
              "label": "_allTokensIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73"
            }
          ]
        }
      }
    }
  }
}
