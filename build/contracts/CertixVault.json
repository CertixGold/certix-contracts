{
  "contractName": "CertixVault",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdt",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xaut",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdtAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_xautAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xautAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xaut\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CertixVault.sol\":\"CertixVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"project:/contracts/CertixVault.sol\":{\"keccak256\":\"0xf4acfa3f239e9a640ff4ce8019dcbb56119e4597d748316bbe355c9177920827\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1795ea57437fdac05fad6c5c3dd46fafa684090b4d9dbc5d6160790834abe15\",\"dweb:/ipfs/QmWr6cEEt46cJu9tpLoziWXhkPgAuU4EDjhdSZZDcZPXkk\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b506104678061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610060575f3560e01c8063041be9f6146100645780632f48ab7d14610093578063485cc955146100a5578063715018a6146100ba5780638da5cb5b146100c2578063f2fde38b146100f2575b5f80fd5b600154610077906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f54610077906001600160a01b031681565b6100b86100b33660046103e0565b610105565b005b6100b8610243565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610077565b6100b8610100366004610411565b610256565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561014a5750825b90505f8267ffffffffffffffff1660011480156101665750303b155b905081158015610174575080155b156101925760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156101bc57845460ff60401b1916600160401b1785555b6101c533610298565b5f80546001600160a01b03808a166001600160a01b0319928316179092556001805492891692909116919091179055831561023a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b61024b6102a9565b6102545f610304565b565b61025e6102a9565b6001600160a01b03811661028c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61029581610304565b50565b6102a0610374565b610295816103bd565b336102db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102545760405163118cdaa760e01b8152336004820152602401610283565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661025457604051631afcd79f60e31b815260040160405180910390fd5b61025e610374565b80356001600160a01b03811681146103db575f80fd5b919050565b5f80604083850312156103f1575f80fd5b6103fa836103c5565b9150610408602084016103c5565b90509250929050565b5f60208284031215610421575f80fd5b61042a826103c5565b939250505056fea2646970667358221220875e933c6d07533e922c8249c23ad60583a4b68499354d7ff562ea7b24f783c164736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610060575f3560e01c8063041be9f6146100645780632f48ab7d14610093578063485cc955146100a5578063715018a6146100ba5780638da5cb5b146100c2578063f2fde38b146100f2575b5f80fd5b600154610077906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f54610077906001600160a01b031681565b6100b86100b33660046103e0565b610105565b005b6100b8610243565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610077565b6100b8610100366004610411565b610256565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561014a5750825b90505f8267ffffffffffffffff1660011480156101665750303b155b905081158015610174575080155b156101925760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156101bc57845460ff60401b1916600160401b1785555b6101c533610298565b5f80546001600160a01b03808a166001600160a01b0319928316179092556001805492891692909116919091179055831561023a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b61024b6102a9565b6102545f610304565b565b61025e6102a9565b6001600160a01b03811661028c57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61029581610304565b50565b6102a0610374565b610295816103bd565b336102db7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146102545760405163118cdaa760e01b8152336004820152602401610283565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661025457604051631afcd79f60e31b815260040160405180910390fd5b61025e610374565b80356001600160a01b03811681146103db575f80fd5b919050565b5f80604083850312156103f1575f80fd5b6103fa836103c5565b9150610408602084016103c5565b90509250929050565b5f60208284031215610421575f80fd5b61042a826103c5565b939250505056fea2646970667358221220875e933c6d07533e922c8249c23ad60583a4b68499354d7ff562ea7b24f783c164736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1290:33",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:33",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "130:102:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "140:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "152:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "163:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "148:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "148:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "140:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "197:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "213:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "218:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "209:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "209:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "222:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "205:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "205:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "193:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "193:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "175:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "175:51:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$4284__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "99:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "110:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "121:4:33",
                "type": ""
              }
            ],
            "src": "14:218:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "286:124:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "296:29:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "318:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "305:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:20:33"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "296:5:33"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "388:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "397:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "400:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "390:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "390:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "390:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "347:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "358:5:33"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "373:3:33",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "378:1:33",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "369:3:33"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "369:11:33"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "382:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "365:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "365:19:33"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "354:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "354:31:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "344:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:42:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "337:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "337:50:33"
                  },
                  "nodeType": "YulIf",
                  "src": "334:70:33"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "265:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "276:5:33",
                "type": ""
              }
            ],
            "src": "237:173:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "502:173:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "548:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "557:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "560:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "550:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "550:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "550:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "523:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "532:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "519:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "515:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "512:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "573:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "602:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "583:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "583:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "573:6:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "621:48:33",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "654:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "665:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:18:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "631:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "631:38:33"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "621:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "471:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "483:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "491:6:33",
                "type": ""
              }
            ],
            "src": "415:260:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "781:102:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "791:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "803:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "799:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "791:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "833:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "848:6:33"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "864:3:33",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "869:1:33",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "860:3:33"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "860:11:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "873:1:33",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "856:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "856:19:33"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "844:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "844:32:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "826:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:51:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "826:51:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "750:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "761:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "772:4:33",
                "type": ""
              }
            ],
            "src": "680:203:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "958:116:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1004:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1013:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1016:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1006:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1006:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1006:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "979:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "988:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "975:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "975:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1000:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "971:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "968:52:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1029:39:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1058:9:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1039:18:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:29:33"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1029:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "924:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "935:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "947:6:33",
                "type": ""
              }
            ],
            "src": "888:186:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1187:101:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1197:26:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1209:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1220:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1205:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1205:18:33"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1197:4:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1239:9:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1254:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1262:18:33",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1250:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:31:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1232:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1232:50:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1232:50:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1156:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1167:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1178:4:33",
                "type": ""
              }
            ],
            "src": "1079:209:33"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20_$4284__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n}",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "268:360:31:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "268:360:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;399:18;;;;;-1:-1:-1;;;;;399:18:31;;;;;;-1:-1:-1;;;;;193:32:33;;;175:51;;163:2;148:18;399::31;;;;;;;375;;;;;-1:-1:-1;;;;;375:18:31;;;425:201;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;:::i;2441:144::-;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3405:215;;;;;;:::i;:::-;;:::i;425:201:31:-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;518:26:31::1;533:10;518:14;:26::i;:::-;555:4;:27:::0;;-1:-1:-1;;;;;555:27:31;;::::1;-1:-1:-1::0;;;;;;555:27:31;;::::1;;::::0;;;;592;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;1232:50:33;;5142:14:1;;1220:2:33;1205:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;425:201:31;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3405:215::-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;175:51:33::0;148:18;;3534:31:0::1;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1847:127::-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2658:162::-:0;966:10:9;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:9;2763:40:0;;;175:51:33;148:18;;2763:40:0;14:218:33;3774:248:0;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;237:173:33:-;305:20;;-1:-1:-1;;;;;354:31:33;;344:42;;334:70;;400:1;397;390:12;334:70;237:173;;;:::o;415:260::-;483:6;491;544:2;532:9;523:7;519:23;515:32;512:52;;;560:1;557;550:12;512:52;583:29;602:9;583:29;:::i;:::-;573:39;;631:38;665:2;654:9;650:18;631:38;:::i;:::-;621:48;;415:260;;;;;:::o;888:186::-;947:6;1000:2;988:9;979:7;975:23;971:32;968:52;;;1016:1;1013;1006:12;968:52;1039:29;1058:9;1039:29;:::i;:::-;1029:39;888:186;-1:-1:-1;;;888:186:33:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract CertixVault is Initializable, OwnableUpgradeable {\n    // Interfaces for USDT and XAUT tokens\n    IERC20 public usdt;\n    IERC20 public xaut;\n\n\n    function initialize(address _usdtAddress, address _xautAddress) public initializer {\n        __Ownable_init(msg.sender);\n\n        usdt = IERC20(_usdtAddress);\n        xaut = IERC20(_xautAddress);\n    }\n}",
  "sourcePath": "/Users/maximereynders/Documents/CertixGold/certix-contracts/contracts/CertixVault.sol",
  "ast": {
    "absolutePath": "project:/contracts/CertixVault.sol",
    "exportedSymbols": {
      "CertixVault": [
        7623
      ],
      "ContextUpgradeable": [
        3158
      ],
      "IERC20": [
        4284
      ],
      "Initializable": [
        448
      ],
      "OwnableUpgradeable": [
        194
      ]
    },
    "id": 7624,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7582,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:31"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7583,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7624,
        "sourceUnit": 4285,
        "src": "58:56:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 7584,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7624,
        "sourceUnit": 195,
        "src": "115:75:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 7585,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7624,
        "sourceUnit": 449,
        "src": "191:75:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7586,
              "name": "Initializable",
              "nameLocations": [
                "292:13:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 448,
              "src": "292:13:31"
            },
            "id": 7587,
            "nodeType": "InheritanceSpecifier",
            "src": "292:13:31"
          },
          {
            "baseName": {
              "id": 7588,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "307:18:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 194,
              "src": "307:18:31"
            },
            "id": 7589,
            "nodeType": "InheritanceSpecifier",
            "src": "307:18:31"
          }
        ],
        "canonicalName": "CertixVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7623,
        "linearizedBaseContracts": [
          7623,
          194,
          3158,
          448
        ],
        "name": "CertixVault",
        "nameLocation": "277:11:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2f48ab7d",
            "id": 7592,
            "mutability": "mutable",
            "name": "usdt",
            "nameLocation": "389:4:31",
            "nodeType": "VariableDeclaration",
            "scope": 7623,
            "src": "375:18:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4284",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7591,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7590,
                "name": "IERC20",
                "nameLocations": [
                  "375:6:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4284,
                "src": "375:6:31"
              },
              "referencedDeclaration": 4284,
              "src": "375:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4284",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "041be9f6",
            "id": 7595,
            "mutability": "mutable",
            "name": "xaut",
            "nameLocation": "413:4:31",
            "nodeType": "VariableDeclaration",
            "scope": 7623,
            "src": "399:18:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$4284",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7594,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7593,
                "name": "IERC20",
                "nameLocations": [
                  "399:6:31"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4284,
                "src": "399:6:31"
              },
              "referencedDeclaration": 4284,
              "src": "399:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4284",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 7621,
              "nodeType": "Block",
              "src": "508:118:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7605,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "533:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "537:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "533:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7604,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "518:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "518:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7608,
                  "nodeType": "ExpressionStatement",
                  "src": "518:26:31"
                },
                {
                  "expression": {
                    "id": 7613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7609,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7592,
                      "src": "555:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4284",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7611,
                          "name": "_usdtAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7597,
                          "src": "569:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7610,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4284,
                        "src": "562:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4284_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 7612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "562:20:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4284",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "555:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 7614,
                  "nodeType": "ExpressionStatement",
                  "src": "555:27:31"
                },
                {
                  "expression": {
                    "id": 7619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7615,
                      "name": "xaut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7595,
                      "src": "592:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4284",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 7617,
                          "name": "_xautAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7599,
                          "src": "606:12:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7616,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4284,
                        "src": "599:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$4284_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 7618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "599:20:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$4284",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "592:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$4284",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 7620,
                  "nodeType": "ExpressionStatement",
                  "src": "592:27:31"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 7622,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7602,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7601,
                  "name": "initializer",
                  "nameLocations": [
                    "496:11:31"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 302,
                  "src": "496:11:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "496:11:31"
              }
            ],
            "name": "initialize",
            "nameLocation": "434:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7597,
                  "mutability": "mutable",
                  "name": "_usdtAddress",
                  "nameLocation": "453:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7622,
                  "src": "445:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7599,
                  "mutability": "mutable",
                  "name": "_xautAddress",
                  "nameLocation": "475:12:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 7622,
                  "src": "467:20:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "444:44:31"
            },
            "returnParameters": {
              "id": 7603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:31"
            },
            "scope": 7623,
            "src": "425:201:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7624,
        "src": "268:360:31",
        "usedErrors": [
          30,
          35,
          211,
          214
        ],
        "usedEvents": [
          41,
          219
        ]
      }
    ],
    "src": "32:596:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-21T11:45:06.407Z",
  "devdoc": {
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}